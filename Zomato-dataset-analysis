{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "9da68979-23f6-4160-ac3f-768f6b8d424b",
   "metadata": {},
   "source": [
    "Zomato-dataset eda project"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "793adee7-0d26-4a65-b6bb-24ffb9c0791f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "# this is also a special command to run the visualization below the code after running the cell.\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "aa059921-4847-4ba8-8e43-c920ce7aa5ac",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Restaurant ID</th>\n",
       "      <th>Restaurant Name</th>\n",
       "      <th>Country Code</th>\n",
       "      <th>City</th>\n",
       "      <th>Address</th>\n",
       "      <th>Locality</th>\n",
       "      <th>Locality Verbose</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Cuisines</th>\n",
       "      <th>...</th>\n",
       "      <th>Currency</th>\n",
       "      <th>Has Table booking</th>\n",
       "      <th>Has Online delivery</th>\n",
       "      <th>Is delivering now</th>\n",
       "      <th>Switch to order menu</th>\n",
       "      <th>Price range</th>\n",
       "      <th>Aggregate rating</th>\n",
       "      <th>Rating color</th>\n",
       "      <th>Rating text</th>\n",
       "      <th>Votes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>6317637</td>\n",
       "      <td>Le Petit Souffle</td>\n",
       "      <td>162</td>\n",
       "      <td>Makati City</td>\n",
       "      <td>Third Floor, Century City Mall, Kalayaan Avenu...</td>\n",
       "      <td>Century City Mall, Poblacion, Makati City</td>\n",
       "      <td>Century City Mall, Poblacion, Makati City, Mak...</td>\n",
       "      <td>121.027535</td>\n",
       "      <td>14.565443</td>\n",
       "      <td>French, Japanese, Desserts</td>\n",
       "      <td>...</td>\n",
       "      <td>Botswana Pula(P)</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3</td>\n",
       "      <td>4.8</td>\n",
       "      <td>Dark Green</td>\n",
       "      <td>Excellent</td>\n",
       "      <td>314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>6304287</td>\n",
       "      <td>Izakaya Kikufuji</td>\n",
       "      <td>162</td>\n",
       "      <td>Makati City</td>\n",
       "      <td>Little Tokyo, 2277 Chino Roces Avenue, Legaspi...</td>\n",
       "      <td>Little Tokyo, Legaspi Village, Makati City</td>\n",
       "      <td>Little Tokyo, Legaspi Village, Makati City, Ma...</td>\n",
       "      <td>121.014101</td>\n",
       "      <td>14.553708</td>\n",
       "      <td>Japanese</td>\n",
       "      <td>...</td>\n",
       "      <td>Botswana Pula(P)</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3</td>\n",
       "      <td>4.5</td>\n",
       "      <td>Dark Green</td>\n",
       "      <td>Excellent</td>\n",
       "      <td>591</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>6300002</td>\n",
       "      <td>Heat - Edsa Shangri-La</td>\n",
       "      <td>162</td>\n",
       "      <td>Mandaluyong City</td>\n",
       "      <td>Edsa Shangri-La, 1 Garden Way, Ortigas, Mandal...</td>\n",
       "      <td>Edsa Shangri-La, Ortigas, Mandaluyong City</td>\n",
       "      <td>Edsa Shangri-La, Ortigas, Mandaluyong City, Ma...</td>\n",
       "      <td>121.056831</td>\n",
       "      <td>14.581404</td>\n",
       "      <td>Seafood, Asian, Filipino, Indian</td>\n",
       "      <td>...</td>\n",
       "      <td>Botswana Pula(P)</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>4</td>\n",
       "      <td>4.4</td>\n",
       "      <td>Green</td>\n",
       "      <td>Very Good</td>\n",
       "      <td>270</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6318506</td>\n",
       "      <td>Ooma</td>\n",
       "      <td>162</td>\n",
       "      <td>Mandaluyong City</td>\n",
       "      <td>Third Floor, Mega Fashion Hall, SM Megamall, O...</td>\n",
       "      <td>SM Megamall, Ortigas, Mandaluyong City</td>\n",
       "      <td>SM Megamall, Ortigas, Mandaluyong City, Mandal...</td>\n",
       "      <td>121.056475</td>\n",
       "      <td>14.585318</td>\n",
       "      <td>Japanese, Sushi</td>\n",
       "      <td>...</td>\n",
       "      <td>Botswana Pula(P)</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>4</td>\n",
       "      <td>4.9</td>\n",
       "      <td>Dark Green</td>\n",
       "      <td>Excellent</td>\n",
       "      <td>365</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>6314302</td>\n",
       "      <td>Sambo Kojin</td>\n",
       "      <td>162</td>\n",
       "      <td>Mandaluyong City</td>\n",
       "      <td>Third Floor, Mega Atrium, SM Megamall, Ortigas...</td>\n",
       "      <td>SM Megamall, Ortigas, Mandaluyong City</td>\n",
       "      <td>SM Megamall, Ortigas, Mandaluyong City, Mandal...</td>\n",
       "      <td>121.057508</td>\n",
       "      <td>14.584450</td>\n",
       "      <td>Japanese, Korean</td>\n",
       "      <td>...</td>\n",
       "      <td>Botswana Pula(P)</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>4</td>\n",
       "      <td>4.8</td>\n",
       "      <td>Dark Green</td>\n",
       "      <td>Excellent</td>\n",
       "      <td>229</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Restaurant ID         Restaurant Name  Country Code              City  \\\n",
       "0        6317637        Le Petit Souffle           162       Makati City   \n",
       "1        6304287        Izakaya Kikufuji           162       Makati City   \n",
       "2        6300002  Heat - Edsa Shangri-La           162  Mandaluyong City   \n",
       "3        6318506                    Ooma           162  Mandaluyong City   \n",
       "4        6314302             Sambo Kojin           162  Mandaluyong City   \n",
       "\n",
       "                                             Address  \\\n",
       "0  Third Floor, Century City Mall, Kalayaan Avenu...   \n",
       "1  Little Tokyo, 2277 Chino Roces Avenue, Legaspi...   \n",
       "2  Edsa Shangri-La, 1 Garden Way, Ortigas, Mandal...   \n",
       "3  Third Floor, Mega Fashion Hall, SM Megamall, O...   \n",
       "4  Third Floor, Mega Atrium, SM Megamall, Ortigas...   \n",
       "\n",
       "                                     Locality  \\\n",
       "0   Century City Mall, Poblacion, Makati City   \n",
       "1  Little Tokyo, Legaspi Village, Makati City   \n",
       "2  Edsa Shangri-La, Ortigas, Mandaluyong City   \n",
       "3      SM Megamall, Ortigas, Mandaluyong City   \n",
       "4      SM Megamall, Ortigas, Mandaluyong City   \n",
       "\n",
       "                                    Locality Verbose   Longitude   Latitude  \\\n",
       "0  Century City Mall, Poblacion, Makati City, Mak...  121.027535  14.565443   \n",
       "1  Little Tokyo, Legaspi Village, Makati City, Ma...  121.014101  14.553708   \n",
       "2  Edsa Shangri-La, Ortigas, Mandaluyong City, Ma...  121.056831  14.581404   \n",
       "3  SM Megamall, Ortigas, Mandaluyong City, Mandal...  121.056475  14.585318   \n",
       "4  SM Megamall, Ortigas, Mandaluyong City, Mandal...  121.057508  14.584450   \n",
       "\n",
       "                           Cuisines  ...          Currency Has Table booking  \\\n",
       "0        French, Japanese, Desserts  ...  Botswana Pula(P)               Yes   \n",
       "1                          Japanese  ...  Botswana Pula(P)               Yes   \n",
       "2  Seafood, Asian, Filipino, Indian  ...  Botswana Pula(P)               Yes   \n",
       "3                   Japanese, Sushi  ...  Botswana Pula(P)                No   \n",
       "4                  Japanese, Korean  ...  Botswana Pula(P)               Yes   \n",
       "\n",
       "  Has Online delivery Is delivering now Switch to order menu Price range  \\\n",
       "0                  No                No                   No           3   \n",
       "1                  No                No                   No           3   \n",
       "2                  No                No                   No           4   \n",
       "3                  No                No                   No           4   \n",
       "4                  No                No                   No           4   \n",
       "\n",
       "   Aggregate rating  Rating color Rating text Votes  \n",
       "0               4.8    Dark Green   Excellent   314  \n",
       "1               4.5    Dark Green   Excellent   591  \n",
       "2               4.4         Green   Very Good   270  \n",
       "3               4.9    Dark Green   Excellent   365  \n",
       "4               4.8    Dark Green   Excellent   229  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=pd.read_csv('zomato.csv',encoding='latin-1')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "bd161b8e-8ee5-4e1a-836a-bcd3c77e11db",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Restaurant ID', 'Restaurant Name', 'Country Code', 'City', 'Address',\n",
       "       'Locality', 'Locality Verbose', 'Longitude', 'Latitude', 'Cuisines',\n",
       "       'Average Cost for two', 'Currency', 'Has Table booking',\n",
       "       'Has Online delivery', 'Is delivering now', 'Switch to order menu',\n",
       "       'Price range', 'Aggregate rating', 'Rating color', 'Rating text',\n",
       "       'Votes'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "6babc8be-f8c6-4b74-b7c5-ca647f834159",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 9551 entries, 0 to 9550\n",
      "Data columns (total 21 columns):\n",
      " #   Column                Non-Null Count  Dtype  \n",
      "---  ------                --------------  -----  \n",
      " 0   Restaurant ID         9551 non-null   int64  \n",
      " 1   Restaurant Name       9551 non-null   object \n",
      " 2   Country Code          9551 non-null   int64  \n",
      " 3   City                  9551 non-null   object \n",
      " 4   Address               9551 non-null   object \n",
      " 5   Locality              9551 non-null   object \n",
      " 6   Locality Verbose      9551 non-null   object \n",
      " 7   Longitude             9551 non-null   float64\n",
      " 8   Latitude              9551 non-null   float64\n",
      " 9   Cuisines              9542 non-null   object \n",
      " 10  Average Cost for two  9551 non-null   int64  \n",
      " 11  Currency              9551 non-null   object \n",
      " 12  Has Table booking     9551 non-null   object \n",
      " 13  Has Online delivery   9551 non-null   object \n",
      " 14  Is delivering now     9551 non-null   object \n",
      " 15  Switch to order menu  9551 non-null   object \n",
      " 16  Price range           9551 non-null   int64  \n",
      " 17  Aggregate rating      9551 non-null   float64\n",
      " 18  Rating color          9551 non-null   object \n",
      " 19  Rating text           9551 non-null   object \n",
      " 20  Votes                 9551 non-null   int64  \n",
      "dtypes: float64(3), int64(5), object(13)\n",
      "memory usage: 1.5+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info() #it gives the details regarding attributes, what is its datatype and values."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "c92e2f41-0461-4eed-9247-58720df6d7be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Restaurant ID</th>\n",
       "      <th>Country Code</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Average Cost for two</th>\n",
       "      <th>Price range</th>\n",
       "      <th>Aggregate rating</th>\n",
       "      <th>Votes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>9.551000e+03</td>\n",
       "      <td>9551.000000</td>\n",
       "      <td>9551.000000</td>\n",
       "      <td>9551.000000</td>\n",
       "      <td>9551.000000</td>\n",
       "      <td>9551.000000</td>\n",
       "      <td>9551.000000</td>\n",
       "      <td>9551.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>9.051128e+06</td>\n",
       "      <td>18.365616</td>\n",
       "      <td>64.126574</td>\n",
       "      <td>25.854381</td>\n",
       "      <td>1199.210763</td>\n",
       "      <td>1.804837</td>\n",
       "      <td>2.666370</td>\n",
       "      <td>156.909748</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>8.791521e+06</td>\n",
       "      <td>56.750546</td>\n",
       "      <td>41.467058</td>\n",
       "      <td>11.007935</td>\n",
       "      <td>16121.183073</td>\n",
       "      <td>0.905609</td>\n",
       "      <td>1.516378</td>\n",
       "      <td>430.169145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>5.300000e+01</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-157.948486</td>\n",
       "      <td>-41.330428</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>3.019625e+05</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>77.081343</td>\n",
       "      <td>28.478713</td>\n",
       "      <td>250.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>5.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>6.004089e+06</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>77.191964</td>\n",
       "      <td>28.570469</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>3.200000</td>\n",
       "      <td>31.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.835229e+07</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>77.282006</td>\n",
       "      <td>28.642758</td>\n",
       "      <td>700.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>3.700000</td>\n",
       "      <td>131.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.850065e+07</td>\n",
       "      <td>216.000000</td>\n",
       "      <td>174.832089</td>\n",
       "      <td>55.976980</td>\n",
       "      <td>800000.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.900000</td>\n",
       "      <td>10934.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Restaurant ID  Country Code    Longitude     Latitude  \\\n",
       "count   9.551000e+03   9551.000000  9551.000000  9551.000000   \n",
       "mean    9.051128e+06     18.365616    64.126574    25.854381   \n",
       "std     8.791521e+06     56.750546    41.467058    11.007935   \n",
       "min     5.300000e+01      1.000000  -157.948486   -41.330428   \n",
       "25%     3.019625e+05      1.000000    77.081343    28.478713   \n",
       "50%     6.004089e+06      1.000000    77.191964    28.570469   \n",
       "75%     1.835229e+07      1.000000    77.282006    28.642758   \n",
       "max     1.850065e+07    216.000000   174.832089    55.976980   \n",
       "\n",
       "       Average Cost for two  Price range  Aggregate rating         Votes  \n",
       "count           9551.000000  9551.000000       9551.000000   9551.000000  \n",
       "mean            1199.210763     1.804837          2.666370    156.909748  \n",
       "std            16121.183073     0.905609          1.516378    430.169145  \n",
       "min                0.000000     1.000000          0.000000      0.000000  \n",
       "25%              250.000000     1.000000          2.500000      5.000000  \n",
       "50%              400.000000     2.000000          3.200000     31.000000  \n",
       "75%              700.000000     2.000000          3.700000    131.000000  \n",
       "max           800000.000000     4.000000          4.900000  10934.000000  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe() #it only deals with the integer attributes in the table."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "87e30e0c-4b12-4eef-bd7d-13d16750c249",
   "metadata": {},
   "source": [
    "# General process to data-analysis(belonging to any dataset):\n",
    "1. finding missing values.\n",
    "2. explore about the numerical variables.\n",
    "3. explore about categorical variables.\n",
    "4. finding relationship between features."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "0e770ad3-f92f-44c2-a91b-adc7f8b2825e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Restaurant ID           0\n",
       "Restaurant Name         0\n",
       "Country Code            0\n",
       "City                    0\n",
       "Address                 0\n",
       "Locality                0\n",
       "Locality Verbose        0\n",
       "Longitude               0\n",
       "Latitude                0\n",
       "Cuisines                9\n",
       "Average Cost for two    0\n",
       "Currency                0\n",
       "Has Table booking       0\n",
       "Has Online delivery     0\n",
       "Is delivering now       0\n",
       "Switch to order menu    0\n",
       "Price range             0\n",
       "Aggregate rating        0\n",
       "Rating color            0\n",
       "Rating text             0\n",
       "Votes                   0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum() #this gives the attributes with the number of values having null values."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "8eb5d6f8-bf49-45ea-af0e-33c56691f7d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Cuisines']"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "[features for features in df.columns if df[features].isnull().sum()>0]\n",
    "#this gives the name of features having non null values, and we can use this and then the is null funnction to get the features having non-null value."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "9bd557ed-d24a-47fd-8b81-d29789f04c27",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country Code</th>\n",
       "      <th>Country</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>India</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>14</td>\n",
       "      <td>Australia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>30</td>\n",
       "      <td>Brazil</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>37</td>\n",
       "      <td>Canada</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>94</td>\n",
       "      <td>Indonesia</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Country Code    Country\n",
       "0             1      India\n",
       "1            14  Australia\n",
       "2            30     Brazil\n",
       "3            37     Canada\n",
       "4            94  Indonesia"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_country=pd.read_excel('country-code.xlsx')\n",
    "df_country.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f7cae2a-cc00-4136-a8dd-d2c41a065c5b",
   "metadata": {},
   "source": [
    "# now,\n",
    "as we have data from two files having a same column as country code then we can merge those 2 so that we can get sort of a whole data.\n",
    "in order to do this we use pd.merge function having attributes 'on' and 'how' where on contains the attribute name between them and how contains\n",
    "join we want to perform on them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "9029d4a2-7c70-461b-99bf-dc6612af95f2",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_df=pd.merge(df,df_country,on='Country Code',how='left')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "54f9dfc1-b192-4b2d-8ad3-c4896840f24c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Country\n",
       "India             8652\n",
       "United States      434\n",
       "United Kingdom      80\n",
       "Brazil              60\n",
       "UAE                 60\n",
       "South Africa        60\n",
       "New Zealand         40\n",
       "Turkey              34\n",
       "Australia           24\n",
       "Phillipines         22\n",
       "Indonesia           21\n",
       "Singapore           20\n",
       "Qatar               20\n",
       "Sri Lanka           20\n",
       "Canada               4\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_df.Country.value_counts()\n",
    "#basically gives us the country with the number of dataset values present in each country."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "dc92c94b-138c-432d-b205-625a65570ec0",
   "metadata": {},
   "outputs": [],
   "source": [
    "country_names=final_df.Country.value_counts().index #basically tells us about all the different types of countries present."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "38455556-bf78-49bb-8314-fb104c25dc8a",
   "metadata": {},
   "outputs": [],
   "source": [
    "country_val=final_df.Country.value_counts().values #stores the corresponding values to the country."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "87d9682a-5302-4c31-b9cb-ae22086c0250",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.pie(country_val[:3],labels=country_names[:3],autopct='%1.2f%%') #[:3] gives me the top 3 values of any list.pie is the function used to plot pie charts.\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "048acd24-bf39-417c-8440-f512a57c49f6",
   "metadata": {},
   "source": [
    "from visualizing the dataset we have come to the conclusion that zomato has most of the orders and transactions from india which is followed by\n",
    "united states and united kingdom."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c8fd4872-9cac-4bd3-a12b-aefe09d7b353",
   "metadata": {},
   "source": [
    "# finding relations between data\n",
    "we saw in the 'columns' we have aggregate rating, rating color,rating text and we can use this to find out that how many people rated higher \n",
    "and what were there reviews, for this we can use group_by function that takes different columns, takes them and groups them together."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "3e724e94-5edc-4d89-b263-c7f3be7f4862",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Aggregate rating</th>\n",
       "      <th>Rating color</th>\n",
       "      <th>Rating text</th>\n",
       "      <th>Rating count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>White</td>\n",
       "      <td>Not rated</td>\n",
       "      <td>2148</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.8</td>\n",
       "      <td>Red</td>\n",
       "      <td>Poor</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.9</td>\n",
       "      <td>Red</td>\n",
       "      <td>Poor</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2.0</td>\n",
       "      <td>Red</td>\n",
       "      <td>Poor</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2.1</td>\n",
       "      <td>Red</td>\n",
       "      <td>Poor</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2.2</td>\n",
       "      <td>Red</td>\n",
       "      <td>Poor</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2.3</td>\n",
       "      <td>Red</td>\n",
       "      <td>Poor</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2.4</td>\n",
       "      <td>Red</td>\n",
       "      <td>Poor</td>\n",
       "      <td>87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2.5</td>\n",
       "      <td>Orange</td>\n",
       "      <td>Average</td>\n",
       "      <td>110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2.6</td>\n",
       "      <td>Orange</td>\n",
       "      <td>Average</td>\n",
       "      <td>191</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2.7</td>\n",
       "      <td>Orange</td>\n",
       "      <td>Average</td>\n",
       "      <td>250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2.8</td>\n",
       "      <td>Orange</td>\n",
       "      <td>Average</td>\n",
       "      <td>315</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2.9</td>\n",
       "      <td>Orange</td>\n",
       "      <td>Average</td>\n",
       "      <td>381</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>3.0</td>\n",
       "      <td>Orange</td>\n",
       "      <td>Average</td>\n",
       "      <td>468</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>3.1</td>\n",
       "      <td>Orange</td>\n",
       "      <td>Average</td>\n",
       "      <td>519</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>3.2</td>\n",
       "      <td>Orange</td>\n",
       "      <td>Average</td>\n",
       "      <td>522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>3.3</td>\n",
       "      <td>Orange</td>\n",
       "      <td>Average</td>\n",
       "      <td>483</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>3.4</td>\n",
       "      <td>Orange</td>\n",
       "      <td>Average</td>\n",
       "      <td>498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>3.5</td>\n",
       "      <td>Yellow</td>\n",
       "      <td>Good</td>\n",
       "      <td>480</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>3.6</td>\n",
       "      <td>Yellow</td>\n",
       "      <td>Good</td>\n",
       "      <td>458</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>3.7</td>\n",
       "      <td>Yellow</td>\n",
       "      <td>Good</td>\n",
       "      <td>427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>3.8</td>\n",
       "      <td>Yellow</td>\n",
       "      <td>Good</td>\n",
       "      <td>400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>3.9</td>\n",
       "      <td>Yellow</td>\n",
       "      <td>Good</td>\n",
       "      <td>335</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>4.0</td>\n",
       "      <td>Green</td>\n",
       "      <td>Very Good</td>\n",
       "      <td>266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>4.1</td>\n",
       "      <td>Green</td>\n",
       "      <td>Very Good</td>\n",
       "      <td>274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>4.2</td>\n",
       "      <td>Green</td>\n",
       "      <td>Very Good</td>\n",
       "      <td>221</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>4.3</td>\n",
       "      <td>Green</td>\n",
       "      <td>Very Good</td>\n",
       "      <td>174</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>4.4</td>\n",
       "      <td>Green</td>\n",
       "      <td>Very Good</td>\n",
       "      <td>144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>4.5</td>\n",
       "      <td>Dark Green</td>\n",
       "      <td>Excellent</td>\n",
       "      <td>95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>4.6</td>\n",
       "      <td>Dark Green</td>\n",
       "      <td>Excellent</td>\n",
       "      <td>78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>4.7</td>\n",
       "      <td>Dark Green</td>\n",
       "      <td>Excellent</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>4.8</td>\n",
       "      <td>Dark Green</td>\n",
       "      <td>Excellent</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>4.9</td>\n",
       "      <td>Dark Green</td>\n",
       "      <td>Excellent</td>\n",
       "      <td>61</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Aggregate rating Rating color Rating text  Rating count\n",
       "0                0.0        White   Not rated          2148\n",
       "1                1.8          Red        Poor             1\n",
       "2                1.9          Red        Poor             2\n",
       "3                2.0          Red        Poor             7\n",
       "4                2.1          Red        Poor            15\n",
       "5                2.2          Red        Poor            27\n",
       "6                2.3          Red        Poor            47\n",
       "7                2.4          Red        Poor            87\n",
       "8                2.5       Orange     Average           110\n",
       "9                2.6       Orange     Average           191\n",
       "10               2.7       Orange     Average           250\n",
       "11               2.8       Orange     Average           315\n",
       "12               2.9       Orange     Average           381\n",
       "13               3.0       Orange     Average           468\n",
       "14               3.1       Orange     Average           519\n",
       "15               3.2       Orange     Average           522\n",
       "16               3.3       Orange     Average           483\n",
       "17               3.4       Orange     Average           498\n",
       "18               3.5       Yellow        Good           480\n",
       "19               3.6       Yellow        Good           458\n",
       "20               3.7       Yellow        Good           427\n",
       "21               3.8       Yellow        Good           400\n",
       "22               3.9       Yellow        Good           335\n",
       "23               4.0        Green   Very Good           266\n",
       "24               4.1        Green   Very Good           274\n",
       "25               4.2        Green   Very Good           221\n",
       "26               4.3        Green   Very Good           174\n",
       "27               4.4        Green   Very Good           144\n",
       "28               4.5   Dark Green   Excellent            95\n",
       "29               4.6   Dark Green   Excellent            78\n",
       "30               4.7   Dark Green   Excellent            42\n",
       "31               4.8   Dark Green   Excellent            25\n",
       "32               4.9   Dark Green   Excellent            61"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_df.groupby(['Aggregate rating','Rating color','Rating text']).size().reset_index().rename(columns={0:'Rating count'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "c880a6a8-4eb6-42af-9392-d8116724b9e3",
   "metadata": {},
   "outputs": [],
   "source": [
    "ratings=final_df.groupby(['Aggregate rating','Rating color','Rating text']).size().reset_index().rename(columns={0:'Rating count'})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4a940a75-a1bc-4f39-8d5c-a25329804b5f",
   "metadata": {},
   "source": [
    "# observation based on the above table:\n",
    "1. when the ratings are above 4.5, the reviews are excellent.\n",
    "2. when the ratings are in the range of 4 to 4.5, the review is very good.\n",
    "3. when the ratings are between 3.5 and 4 ,the review is good.\n",
    "4. when the ratings are between 3 and 3.5, the review is average.\n",
    "5. when the ratings are between 2.5 and 3, the review is poor."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "af3c5cb9-489a-46fd-a87d-92f7b14372f1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.rcParams['figure.figsize']=(12,6)\n",
    "sns.barplot(x=\"Aggregate rating\",y=\"Rating count\",data=ratings)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "972e1927-61ed-43e8-898e-4a3465ecf303",
   "metadata": {},
   "source": [
    "but we are also being assigned colors to each rating and thus we will modify this bar graph according to the color ratings mentioned."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "90be2737-05fc-4633-8c0a-4075bafee425",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Priyanshu jha\\AppData\\Local\\Temp\\ipykernel_20852\\3815760330.py:2: UserWarning: \n",
      "The palette list has fewer values (5) than needed (6) and will cycle, which may produce an uninterpretable plot.\n",
      "  sns.barplot(x=\"Aggregate rating\",y=\"Rating count\",hue=\"Rating color\",data=ratings,palette=['blue','red','orange','yellow','green'])\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.rcParams['figure.figsize']=(12,6)\n",
    "sns.barplot(x=\"Aggregate rating\",y=\"Rating count\",hue=\"Rating color\",data=ratings,palette=['blue','red','orange','yellow','green'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3301c342-dd8c-49e7-9823-f8edfacafcd4",
   "metadata": {},
   "source": [
    "# observation we can infer from this:\n",
    "1. not rated percentage of people is very high indicating that people are not usually rating while using the app.\n",
    "2. majority of the rating are between 2.5-4."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "48c83929-602d-40fd-9cec-9768988beba1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Aggregate rating</th>\n",
       "      <th>Country</th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>Brazil</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>India</td>\n",
       "      <td>2139</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>United States</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.8</td>\n",
       "      <td>India</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Aggregate rating         Country     0\n",
       "0               0.0          Brazil     5\n",
       "1               0.0           India  2139\n",
       "2               0.0  United Kingdom     1\n",
       "3               0.0   United States     3\n",
       "4               1.8           India     1"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_df.groupby(['Aggregate rating','Country']).size().reset_index().head(5)# basically groups country and their aggregate rating together."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "46f21080-76e0-476a-9a2c-b5791ff1ebb8",
   "metadata": {},
   "source": [
    "# observation \n",
    "> maximum number of 0 ratings or maximum number of customers who do not give rating are from india."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "96885858-1641-4a9c-a1f4-0fc8b6cacaeb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['New Delhi', 'Gurgaon', 'Noida', 'Faridabad', 'Ghaziabad',\n",
       "       'Bhubaneshwar', 'Amritsar', 'Ahmedabad', 'Lucknow', 'Guwahati',\n",
       "       ...\n",
       "       'Ojo Caliente', 'Montville', 'Monroe', 'Miller', 'Middleton Beach',\n",
       "       'Panchkula', 'Mc Millan', 'Mayfield', 'Macedon', 'Vineland Station'],\n",
       "      dtype='object', name='City', length=141)"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_df.City.value_counts().index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "c878210f-6f7a-42f5-8228-4e34db6960f8",
   "metadata": {},
   "outputs": [],
   "source": [
    "city_values=final_df.City.value_counts().values\n",
    "city_labels=final_df.City.value_counts().index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "280368a8-5310-426c-8ffc-0b28bebb70b1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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3AhJkvD7778jMTERWq0WmzdvRnl5OSZPngydToeIiAgsXrwYw4cPx8yZM63nWr58ORITE+Hj44Pw8HDceuutyM/Pr5Nz06ZN6Nu3L7RaLSIiIvDUU0/BZDJZPz58+HA88sgjeOKJJxAYGIjw8HA8//zzzfgvR0T/YIEgcjOFhYX4448/8NBDD0Gn0zV4jCRJNp3ziSeewEsvvYSkpCR069YNs2fPxtatW/Hjjz9i7dq12Lx5M/7+++86zzEYDJg/fz4OHDiA1atX4/Tp05gyZYr141lZWRg/fjz69OmDAwcO4N1338XHH3+M//73v3XOs2zZMuh0OuzcuRP/93//hxdffBFr1661KT8RNYFMRG5lx44dMgD5+++/r/N4UFCQrNPpZJ1OJz/xxBPy6dOnZQDyvn37rMcUFxfLAOQNGzbIsizLGzZskAHIq1evth5TVlYmq9VqeeXKldbHSkpKZC8vL3nGjBkXzLVr1y4ZgFxeXi7LsizPnTtX7tChg2yxWKzHvP3227K3t7dsNptlWZblYcOGyYMHD65znj59+shPPvmkTf8mRGQ7jkAQuanzRxl27dqF/fv3o3PnzqipqbHpXImJida/nzp1CkajEX379rU+5ufnhw4dOtR5zr59+3DttdeidevW8PHxwfDhwwEA6enpAICkpCQMGDCgTs5BgwahoqICmZmZ1se6detW57wRERH1LoUQkf2xQBC5mfj4eEiShOTk5DqPx8XFIT4+Hp6engAAhaL224Msy9ZjjEZjg+c891LIP8efX1DOPU9lZSXGjBkDb29vLF++HLt378aqVasA1F7a+Of4C53j3MfVanWdYyRJgsViaTAnEdkPCwSRmwkKCsIVV1yBt956C5WVlRc8LiQkBACQk5NjfezcCZUX0rZtW6jVauzatcv6WFlZGVJSUqzvJycno6CgAAsXLsSQIUPQsWPHeqMGCQkJ2LZtW53isW3bNvj4+CAyMvKSOYioebFAELmhd955ByaTCYmJifjmm2+QlJSEY8eOYfny5UhOToZSqYSnpyf69++PhQsX4ujRo/jrr7/wzDPPXPLcPj4+uPPOO/H4449jw4YNOHLkCO6++24oFArryEFMTAw0Gg2WLFmCU6dO4ccff8T8+fPrnGfatGnIyMjAww8/jOTkZPzwww947rnnMHv2bOvoCBGJw69CIjfUtm1b7Nu3D6NHj8acOXPQvXt3JCYmYsmSJXjsscesP8w/+eQTGI1GJCYmYsaMGfXugLiQ1157DQMGDMDVV1+N0aNHY9CgQejUqRM8PDwA1I5uLF26FCtXrkRCQgIWLlyIV199tc45IiMj8csvv2DXrl3o3r07pk6dinvuuadRJYaImp8knzs+SETUDCorKxEZGYlFixbhnnvuER2HiOyAy8URkd3t27cPycnJ6Nu3L0pLS/Hiiy8CAK699lrByYjIXlggiKhZvPrqqzh27Bg0Gg169+6NzZs3Izg4WHQsIrITXsIgIiIim3ESJREREdmMBYKIiIhsxgJBRERENmOBICIiIpuxQBAREZHNWCCIiIjIZiwQREREZDMWCCIiIrIZCwQRERHZjAWCiIiIbMYCQURERDZjgSAiIiKbsUAQERGRzVggiIiIyGYsEERERGQzFggiIiKyGQsEERER2YwFgoiIiGzGAkFEREQ2Y4EgIiIim7FAEBERkc1YIIiIiMhmLBBERERkMxYIIiIishkLBBEREdmMBYKIiIhsxgJBRERENmOBICIiIpuxQBAREZHNWCCIiIjIZv8PRcjFTF8NswMAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.pie(city_values[:5],labels=city_labels[:5],autopct='%1.2f%%')#[:,5] what this command does is that it generates top 5 data in the column.\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5d56fe3a-5399-4a56-811f-beb6fbccaf8f",
   "metadata": {},
   "source": [
    "# observation\n",
    "> from the pie chart we can come to the conclusion that most number of users of zomato is:\n",
    "1. new delhi\n",
    "2. gurgaon\n",
    "3. noida\n",
    "4. faridabad\n",
    "5. ghaziabad"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8df0dd06-4344-4790-b609-def5cb6af05c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:anaconda4]",
   "language": "python",
   "name": "conda-env-anaconda4-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
